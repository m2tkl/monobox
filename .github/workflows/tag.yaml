name: Update version

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name (e.g., v0.1.0)"
        required: true
        default: "v0.1.0"

jobs:
  tag:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'

    - name: Update version in package.json
      run: |
        VERSION="${{ github.event.inputs.tag_name }}"
        VERSION=${VERSION#v} # Remove 'v' prefix
        jq ".version = \"${VERSION}\"" package.json > package.json.tmp && mv package.json.tmp package.json

    - name: Update version in Cargo.toml
      run: |
        VERSION="${{ github.event.inputs.tag_name }}"
        VERSION=${VERSION#v}
        sed -i.bak "s/^version = .*/version = \"${VERSION}\"/" src-tauri/Cargo.toml

    - name: Update version in tauri.conf.json
      run: |
        VERSION="${{ github.event.inputs.tag_name }}"
        VERSION=${VERSION#v}
        jq ".version = \"${VERSION}\"" src-tauri/tauri.conf.json > src-tauri/tauri.conf.json.tmp && mv src-tauri/tauri.conf.json.tmp src-tauri/tauri.conf.json

    - name: Update Cargo.lock
      working-directory: src-tauri
      run: |
        VERSION="${{ github.event.inputs.tag_name }}"
        VERSION=${VERSION#v}
        # Get app name from Cargo.toml
        APP_NAME=$(grep '^name =' Cargo.toml | head -n 1 | sed 's/name = "\(.*\)"/\1/')
        # Update version for only this app
        sed -i.bak -E "/name = \"$APP_NAME\"/{n;s/version = \".*\"/version = \"$VERSION\"/}" Cargo.lock

    - name: Commit changes and create tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add package.json src-tauri/tauri.conf.json src-tauri/Cargo.toml
        git commit -m "Update version to ${{ github.event.inputs.tag_name }}"
        git push origin main
        git tag ${{ github.event.inputs.tag_name }}
        git push origin ${{ github.event.inputs.tag_name }}
